import{_ as e,o,c as d,e as c}from"./app-9qRtXqBa.js";const l={},i=c('<h2 id="组件生命周期" tabindex="-1"><a class="header-anchor" href="#组件生命周期" aria-hidden="true">#</a> 组件生命周期</h2><ul><li><code>beforeCreate</code> 实例已经开始初始化之后调用 【数据初始化未完成，页面没有开始渲染】</li><li><code>created</code> 实例创建完成之后调用 【组件创建完成，不代表组件已挂载到页面】</li><li><code>beforeMount</code> 在挂载开始之前被调用。</li><li><code>mounted</code> 挂载到实例上去之后调用。 注意：此处并不能确定子组件被全部挂载，如果需要子组件完全挂载之后在执行操作可以使用$nextTickVue官方文档</li><li><code>beforeUpdate</code> 数据更新时调用，发生在虚拟 DOM 打补丁之前。仅H5平台支持</li><li><code>updated</code> 由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。仅H5平台支持</li><li><code>beforeDestroy</code> 实例销毁之前调用。在这一步，实例仍然完全可用。</li><li><code>destroyed</code> Vue实例销毁后调用。调用后，Vue实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。</li></ul><h2 id="页面生命周期" tabindex="-1"><a class="header-anchor" href="#页面生命周期" aria-hidden="true">#</a> 页面生命周期</h2><ul><li><code>onLoad</code> 监听页面加载，其参数为上个页面传递的数据，参数类型为object（用于页面传参）</li><li><code>onShow</code> 监听页面显示</li><li><code>onReady</code> 监听页面初次渲染完成</li><li><code>onHide</code> 监听页面隐藏</li><li><code>onUnload</code> 监听页面卸载</li><li><code>onPullDownRefresh</code> 监听用户下拉动作</li><li><code>onReachBottom</code> 页面上拉触底事件的处理函数</li><li><code>onShareAppMessage</code> 用户点击右上角分享 微信小程序</li><li><code>onPageScroll</code> 监听页面滚动</li><li><code>onTabItemTap</code> 当前是 tab 页时，点击 tab 时触发。</li></ul>',4),a=[i];function t(n,r){return o(),d("div",null,a)}const h=e(l,[["render",t],["__file","Vue生命周期.html.vue"]]);export{h as default};
