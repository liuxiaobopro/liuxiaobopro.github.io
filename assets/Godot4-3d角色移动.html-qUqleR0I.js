import{_ as t,r as e,o as p,c as o,a as n,b as s,d as c,e as i}from"./app--l7TVjR7.js";const l="/assets/image-xPxD7v9o.png",u={},r=n("h1",{id:"godot4-3d角色移动",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#godot4-3d角色移动","aria-hidden":"true"},"#"),s(" Godot4-3d角色移动")],-1),d=n("blockquote",null,[n("p",null,"站立部分逻辑未实现")],-1),k=n("h2",{id:"教学视频",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#教学视频","aria-hidden":"true"},"#"),s(" 教学视频")],-1),v={href:"https://www.youtube.com/watch?v=xIKErMgJ1Yk&list=RDCMUCQ8hqAX8i9mdcwrnu8e2sIg&start_radio=1&ab_channel=Lukky",target:"_blank",rel:"noopener noreferrer"},m=i('<h2 id="结构" tabindex="-1"><a class="header-anchor" href="#结构" aria-hidden="true">#</a> 结构</h2><p><img src="'+l+`" alt="Alt text"></p><h2 id="player-脚本" tabindex="-1"><a class="header-anchor" href="#player-脚本" aria-hidden="true">#</a> player 脚本</h2><div class="language-gdscript line-numbers-mode" data-ext="gdscript"><pre class="language-gdscript"><code><span class="token keyword">extends</span> <span class="token class-name">CharacterBody3D</span>

@<span class="token keyword">onready</span> <span class="token keyword">var</span> head <span class="token operator">=</span> <span class="token variable">$Head</span>

<span class="token comment">## 当前速度</span>
<span class="token keyword">var</span> current_speed <span class="token operator">=</span> <span class="token number">5.0</span>
<span class="token keyword">const</span> walking_speed <span class="token operator">=</span> <span class="token number">5.0</span>
<span class="token keyword">const</span> sprinting_speed <span class="token operator">=</span> <span class="token number">8.0</span>
<span class="token keyword">const</span> crouching_speed <span class="token operator">=</span> <span class="token number">3.0</span>
<span class="token keyword">var</span> lerp_speed <span class="token operator">=</span> <span class="token number">10.0</span>

<span class="token keyword">const</span> jump_velocity <span class="token operator">=</span> <span class="token number">4.5</span>

<span class="token comment">## 鼠标灵敏度</span>
<span class="token keyword">const</span> mouse_sens <span class="token operator">=</span> <span class="token number">0.25</span>

<span class="token comment">## 移动方向</span>
<span class="token keyword">var</span> direction <span class="token operator">=</span> Vector3<span class="token punctuation">.</span><span class="token constant">ZERO</span>

<span class="token comment"># Get the gravity from the project settings to be synced with RigidBody nodes.</span>
<span class="token keyword">var</span> gravity <span class="token operator">=</span> ProjectSettings<span class="token punctuation">.</span><span class="token function">get_setting</span><span class="token punctuation">(</span><span class="token string">&quot;physics/3d/default_gravity&quot;</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1.3</span>


<span class="token keyword">func</span> <span class="token function">_ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	Input<span class="token punctuation">.</span><span class="token function">set_mouse_mode</span><span class="token punctuation">(</span>Input<span class="token punctuation">.</span><span class="token constant">MOUSE_MODE_CAPTURED</span><span class="token punctuation">)</span>
	

<span class="token keyword">func</span> <span class="token function">_input</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> event <span class="token keyword">is</span> InputEventMouseMotion<span class="token punctuation">:</span>
		<span class="token function">rotate_y</span><span class="token punctuation">(</span><span class="token function">deg_to_rad</span><span class="token punctuation">(</span><span class="token operator">-</span>event<span class="token punctuation">.</span>relative<span class="token punctuation">.</span>x <span class="token operator">*</span> mouse_sens<span class="token punctuation">)</span><span class="token punctuation">)</span>
		head<span class="token punctuation">.</span><span class="token function">rotate_x</span><span class="token punctuation">(</span><span class="token function">deg_to_rad</span><span class="token punctuation">(</span><span class="token operator">-</span>event<span class="token punctuation">.</span>relative<span class="token punctuation">.</span>y <span class="token operator">*</span> mouse_sens<span class="token punctuation">)</span><span class="token punctuation">)</span>
		head<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token function">clamp</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token function">deg_to_rad</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">89</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">deg_to_rad</span><span class="token punctuation">(</span><span class="token number">89</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">func</span> <span class="token function">_physics_process</span><span class="token punctuation">(</span>delta<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> Input<span class="token punctuation">.</span><span class="token function">is_action_pressed</span><span class="token punctuation">(</span><span class="token string">&quot;crouch&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		head<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token function">lerp</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> delta <span class="token operator">*</span> lerp_speed<span class="token punctuation">)</span>
		
		current_speed <span class="token operator">=</span> crouching_speed
	<span class="token keyword">else</span><span class="token punctuation">:</span>
		head<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token function">lerp</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> delta <span class="token operator">*</span> lerp_speed<span class="token punctuation">)</span>
		
		<span class="token keyword">if</span> Input<span class="token punctuation">.</span><span class="token function">is_action_pressed</span><span class="token punctuation">(</span><span class="token string">&quot;sprint&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
			current_speed <span class="token operator">=</span> sprinting_speed
		<span class="token keyword">else</span><span class="token punctuation">:</span>
			current_speed <span class="token operator">=</span> walking_speed
	
	<span class="token comment"># Add the gravity.</span>
	<span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token function">is_on_floor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> 
		velocity<span class="token punctuation">.</span>y <span class="token operator">-=</span> gravity <span class="token operator">*</span> delta

	<span class="token comment"># Handle jump.</span>
	<span class="token keyword">if</span> Input<span class="token punctuation">.</span><span class="token function">is_action_just_pressed</span><span class="token punctuation">(</span><span class="token string">&quot;ui_accept&quot;</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token function">is_on_floor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		velocity<span class="token punctuation">.</span>y <span class="token operator">=</span> jump_velocity

	<span class="token comment"># Get the input direction and handle the movement/deceleration.</span>
	<span class="token comment"># As good practice, you should replace UI actions with custom gameplay actions.</span>
	<span class="token keyword">var</span> input_dir <span class="token operator">=</span> Input<span class="token punctuation">.</span><span class="token function">get_vector</span><span class="token punctuation">(</span><span class="token string">&quot;ui_left&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ui_right&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ui_up&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ui_down&quot;</span><span class="token punctuation">)</span>
	direction <span class="token operator">=</span> <span class="token function">lerp</span><span class="token punctuation">(</span>direction<span class="token punctuation">,</span> <span class="token punctuation">(</span>transform<span class="token punctuation">.</span>basis <span class="token operator">*</span> <span class="token function">Vector3</span><span class="token punctuation">(</span>input_dir<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> input_dir<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> delta <span class="token operator">*</span> lerp_speed<span class="token punctuation">)</span>
	<span class="token keyword">if</span> direction<span class="token punctuation">:</span>
		velocity<span class="token punctuation">.</span>x <span class="token operator">=</span> direction<span class="token punctuation">.</span>x <span class="token operator">*</span> current_speed
		velocity<span class="token punctuation">.</span>z <span class="token operator">=</span> direction<span class="token punctuation">.</span>z <span class="token operator">*</span> current_speed
	<span class="token keyword">else</span><span class="token punctuation">:</span>
		velocity<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token function">move_toward</span><span class="token punctuation">(</span>velocity<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> current_speed<span class="token punctuation">)</span>
		velocity<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token function">move_toward</span><span class="token punctuation">(</span>velocity<span class="token punctuation">.</span>z<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> current_speed<span class="token punctuation">)</span>

	<span class="token function">move_and_slide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function _(b,y){const a=e("ExternalLinkIcon");return p(),o("div",null,[r,d,k,n("p",null,[n("a",v,[s("Godot 4.X : Ultimate First Person Controller Tutorial ( 2023 )"),c(a)])]),m])}const f=t(u,[["render",_],["__file","Godot4-3d角色移动.html.vue"]]);export{f as default};
